/*
 * 
 * Copyright 2014 Jules White
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */

package org.coursera.capstone.symptom.controllers;

import java.io.IOException;
import java.util.ArrayList;

import javax.servlet.http.HttpServletResponse;

import org.coursera.capstone.symptom.repository.Account;
import org.coursera.capstone.symptom.repository.AccountRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
public class GeneralController {

	final String REGID_PARAMETER = "regId";
	// The path to add user
	final String ADD_USER = "/addUser";
	// The path to add the registration id of the device for the push
	// notification to the user account
	final String ADD_REGID = "/addRegId";
	// the path for the test web service to check the authentication of the user
	final String TEST = "/test";
	// the path for population of the tablet account with all the available users which are hard coded
	final String POPULATE_ACCOUNT_TABLE = "/populateUsers";

	@Autowired
	private AccountRepository accountRepo;

	/**
	 * You will need to create one or more Spring controllers to fulfill the
	 * requirements of the assignment. If you use this file, please rename it to
	 * something other than "AnEmptyController"
	 * 
	 * 
	 * ________ ________ ________ ________ ___ ___ ___ ________ ___ __ |\
	 * ____\|\ __ \|\ __ \|\ ___ \ |\ \ |\ \|\ \|\ ____\|\ \|\ \ \ \ \___|\ \
	 * \|\ \ \ \|\ \ \ \_|\ \ \ \ \ \ \ \\\ \ \ \___|\ \ \/ /|_ \ \ \ __\ \ \\\
	 * \ \ \\\ \ \ \ \\ \ \ \ \ \ \ \\\ \ \ \ \ \ ___ \ \ \ \|\ \ \ \\\ \ \ \\\
	 * \ \ \_\\ \ \ \ \____\ \ \\\ \ \ \____\ \ \\ \ \ \ \_______\ \_______\
	 * \_______\ \_______\ \ \_______\ \_______\ \_______\ \__\\ \__\
	 * \|_______|\|_______|\|_______|\|_______|
	 * \|_______|\|_______|\|_______|\|__| \|__|
	 * 
	 * 
	 */

	@RequestMapping(value = ADD_USER, method = RequestMethod.POST)
	public @ResponseBody
	Account addUser(@RequestBody Account account, HttpServletResponse response) {
		if (accountRepo.findByUsername(account.getUsername()) == null) {
			accountRepo.save(account);
			response.setStatus(HttpServletResponse.SC_OK);
			return accountRepo.findByUsername(account.getUsername());
		} else {
			response.setStatus(HttpServletResponse.SC_NOT_FOUND);
			return null;
		}
	}

	/**
	 * TODO
	 */
	@RequestMapping(value = ADD_REGID, method = RequestMethod.POST)
	public @ResponseBody
	Account addRegIdTo(@RequestBody Account account,
			@RequestParam(REGID_PARAMETER) String regId,
			HttpServletResponse response) {
		if (accountRepo.findByUsername(account.getUsername()) == null) {
			response.setStatus(HttpServletResponse.SC_NOT_FOUND);
			return null;
		} else {
			accountRepo.findByUsername(account.getUsername()).setRegId(regId);
			response.setStatus(HttpServletResponse.SC_OK);
			return accountRepo.findByUsername(account.getUsername());
		}
	}

	/**
	 * TODO
	 */
	@RequestMapping(value = TEST, method = RequestMethod.GET)
	public ResponseEntity<Void> getTest() throws IOException {

		return new ResponseEntity<Void>(HttpStatus.OK);
	}
	
	/**
	 * 
	 */
	@RequestMapping(value = POPULATE_ACCOUNT_TABLE, method = RequestMethod.POST)
	public ResponseEntity<Void> populateUsers(@RequestBody ArrayList<Account> list, HttpServletResponse response) {
		if (accountRepo.findByUsername("drJohn") == null){
			for (int i=0; i<list.size(); i++){
				accountRepo.save(list.get(i));	
			}	
		} else {
		
		}
		return new ResponseEntity<Void>(HttpStatus.OK);
	}
}
